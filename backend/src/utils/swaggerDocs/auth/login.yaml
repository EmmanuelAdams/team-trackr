paths:
  /api/v1/auth/login:
    post:
      summary: Login user
      description: Login user with the provided details.
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          headers:
            Authorization:
              description: Bearer [TOKEN]
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the login was successful.
                    example: true
                  message:
                    type: string
                    description: A message indicating the success of the login.
                    example: User logged in successfully
                  user:
                    $ref: '#/definitions/User'
                    description: The user object.
                  token:
                    type: string
                    description: The JWT token for authentication.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                success: false
                error: Invalid credentials
        '422':
          description: Failed to login user
          content:
            application/json:
              example:
                success: false
                error: Failed to login user

definitions:
  User:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      level:
        type: string
        enum: [Junior, Mid-level, Senior, CEO]
      yearsOfWork:
        type: number
      availability:
        type: object
        properties:
          status:
            type: string
            enum: [Available, Not Available]
          reason:
            type: string
          nextAvailability:
            type: string
            format: date
